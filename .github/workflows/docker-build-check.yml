name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest  

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'  

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Cache pnpm dependencies
      uses: actions/cache@v3
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    - name: Install dependencies
      run: pnpm install --no-frozen-lockfile  

    - name: Build Docker image (build stage)
      run: docker build --file Dockerfile --target build --tag fedired --build-arg NODE_OPTIONS="--max_old_space_size=4096" .

    - name: Build production Docker image
      run: docker build --file Dockerfile --target production --tag fedired:latest --build-arg NODE_OPTIONS="--max_old_space_size=4096" .

    - name: Login to Docker Hub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Push Docker image to Docker Hub
      run: |
        docker tag fedired:latest ${{ secrets.DOCKER_USERNAME }}/fedired:latest  # Etiqueta la imagen
        docker push ${{ secrets.DOCKER_USERNAME }}/fedired:latest  # Sube la imagen etiquetada a Docker Hub

    - name: Login to GitHub Container Registry
      run: echo ${{ secrets.GITTOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push Docker image to GitHub Container Registry
      run: |
        docker tag fedired:latest ghcr.io/${{ github.repository_owner }}/fedired:latest  # Etiqueta la imagen para GHCR
        docker push ghcr.io/${{ github.repository_owner }}/fedired:latest  # Sube la imagen etiquetada a GHCR
